apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-config
spec:
  workspaces:
    - name: input
      description: The config repo cloned into this volume
  resources:
    inputs:
    - name: app-image
      type: image
  params:
    - name: IMAGE_TAG
      default: latest 
    - name: PATH_CONTEXT
      description: The location relative to the start of the input workspace where the root of the config repo is.  
    - name: BRANCH_SUFFIX
      description: The name of the branch to create in the parent repo and push the changes into.  Branch will be in the form ci-BRANCH_SUFFIX
      default: "test"
    - name: GIT_SECRET_NAME
      description: The name of the secret that allows us to push to the git repo (in git credential-store format).  Key should be git.store
  results:
    - name: branch-name
      description: The name of the branch that the config changes were checked into (useful for creating pull request)
  volumes:
    - name: git-secret
      secret:
        secretName: $(params.GIT_SECRET_NAME)
  steps:
    - name: checkout
      workingDir: $(workspaces.input.path)/$(params.PATH_CONTEXT)
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest
      script: |
        set -euxo pipefail

        BRANCH_NAME="ci-$(params.BRANCH_SUFFIX)"
        git checkout -b ${BRANCH_NAME}

        echo ${BRANCH_NAME} | tr -d "\n" | tee $(results.branch-name.path)
    - name: update-deployment
      workingDir: $(workspaces.input.path)/$(params.PATH_CONTEXT)
      image: quay.io/eformat/openshift-kustomize:latest
      script: |
        #!/usr/bin/env bash

        set -Eeuo pipefail

        KUSTOMIZE_FILE=kustomization.yaml

        if [[ ! -f ${KUSTOMIZE_FILE} ]]; then
          echo "No ${KUSTOMIZE_FILE} file found at $(pwd) [Path context: $(params.PATH_CONTEXT)]"
          exit 1
        fi

        kustomize edit set image payment/image="$(resources.inputs.app-image.url):$(params.IMAGE_TAG)"
        echo -e "Contents after image kustomization are:\n $(cat ${KUSTOMIZE_FILE})"
    - name: checkin
      workingDir: $(workspaces.input.path)/$(params.PATH_CONTEXT)
      volumeMounts:
        - name: git-secret
          mountPath: /var/run/secrets/git
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest
      script: |
        set -euxo pipefail

        git config --global user.email "pipes@tekton.com"
        git config --global user.name "Tekton Pipeline"

        git config --global credential.helper 'store --file /var/run/secrets/git/git.store'
        git add . 
        git commit -m"Configuration Changes"
        git push -u origin $(cat $(results.branch-name.path))

        

